local typeof = typeof
local hookfunc = hookfunction
local getmt = getrawmetatable or debug.getmetatable
local gsub = string.gsub
local match = string.match
local rnd = math.random
local cache = setmetatable({}, {__mode = "k"})
local possibleMemoryChars = {
    "a", "b", "c", "d", "e", "f", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9"
}
-- Secure call implementation for (more) secure calling of tostring
-- Still detectable though.
local setidentity = setidentity or setthreadidentity or set_thread_identity or setthreadcontext or set_thread_context or (syn and syn.set_thread_identity)
local getidentity = getidentity or getthreadidentity or get_thread_identity or getthreadcontext or get_thread_context or (syn and syn.get_thread_identity)
local securecall = syn and syn.secure_call or newcclosure(function(func, env, ...)
    return coroutine.wrap(function(...)
        local id = getidentity()
        setidentity(2)
        setfenv(0, getsenv(env))
        setfenv(1, getsenv(env))
        local res = {func(...)}
        setidentity(id)
        return table.unpack(res) -- Hidden args maybe removed? idk about packing and unpacking the arguments
    end)(...)
end)
local _tostring; _tostring = hookfunc(tostring, newcclosure(function(data)
    if checkcaller() then -- return normal if its exploit call
        return _tostring(data)
    end
    local callingScript = getcallingscript()
    local res = securecall(_tostring, callingScript, data)
    local type = typeof(data)
    if type == "table" or type == "userdata" or type == "function" or type == "thread" then
        if type == "table" or type == "userdata" then
            local mt = getmt(data)
            if mt and rawget(mt, "__tostring") then
            return res
            end
        end
        --32bit res E.G > table: 0x000000008b9b661b
        --64bit res E.G > table: 0x7a3241c3abbb4de8
        if match(res, "x00000000") then
            if cache[data] then
                return cache[data]
            end
            -- 32 bit string
            res = gsub(res, "x00000000", function()
                -- Generate fake string
                local finalStr = ""
                for i = 1, 8 do
                    finalStr = finalStr .. possibleMemoryChars[rnd(#possibleMemoryChars)]
                end
                return "x" .. finalStr
            end)
            cache[data] = res
        end
    end
    return res
end))
local newversion
task.spawn(function()
    newversion = game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://clientsettings.roblox.com/v2/client-version/WindowsPlayer")).version
end)
local getVersionMiddleware = Instance.new("BindableFunction")
getVersionMiddleware.OnInvoke = function()
    if (not newversion) then
        repeat task.wait() until newversion
    end
    return newversion
end
hookfunction(Version, newcclosure(function()
    return getVersionMiddleware:Invoke()
end))
hookfunction(version, newcclosure(function()
    return getVersionMiddleware:Invoke()
end))
game:GetService("ReplicatedStorage").Security.RemoteEvent:Destroy()
game:GetService("ReplicatedStorage").Security[""]:Destroy()
game:GetService("ReplicatedStorage").Security:Destroy()
game:GetService("Players").LocalPlayer.PlayerScripts.Client.DeviceChecker:Destroy()

local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
  Title = "ðŸ¥‹ MTX Client | Blade Ball V2.5 ðŸ‘‘ ",
  SubTitle = "metatron_exe | MTX Team",
  TabWidth = 160,
  Size = UDim2.fromOffset(500, 320),
  Acrylic = false, -- The blur may be detectable, setting this to false disables blur entirely
  Theme = "Amethyst",
  MinimizeKey = Enum.KeyCode.G -- Used when theres no MinimizeKeybind
})
local Tabs = {
  AutoParry = Window:AddTab({ Title = "Auto Parry", Icon = "moon" }),
  Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}
local Options = Fluent.Options
InterfaceManager:SetLibrary(Fluent)
InterfaceManager:SetFolder("FluentScriptHub")
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
Window:SelectTab(1)
-- Botao Para mobile suport
local CheckMobile = function()
  if
      game:GetService("UserInputService").TouchEnabled
   then
      return true 
  end
end 
IsMobile = CheckMobile()
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local GuiService = game:GetService("GuiService")
local screenResolution = GuiService:GetScreenResolution()
local screenWidth = screenResolution.X
local screenHeight = screenResolution.Y
local windowWidth = screenWidth * 0.6
local windowHeight = screenHeight * 0.6
-- UDim2.fromOffset(500, 200),
if not IsMobile then 
  windowWidth,windowHeight = 500,200
else
  local ClickButton = Instance.new("ScreenGui")
  local MainFrame = Instance.new("Frame")
  local ImageLabel = Instance.new("ImageLabel")
  local TextButton = Instance.new("TextButton") 
  local UICorner = Instance.new("UICorner") 
  local UICorner_2 = Instance.new("UICorner")
  if game.CoreGui:FindFirstChild("ClickButton") then 
      game.CoreGui:FindFirstChild("ClickButton"):Destroy()
  end
  ClickButton.Name = "ClickButton"
  ClickButton.Parent = game.CoreGui
  ClickButton.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
  MainFrame.Name = "MainFrame"
  MainFrame.Parent = ClickButton
  MainFrame.Active = true
  MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
  MainFrame.BackgroundColor3 = Color3.new(1, 1, 1)
  MainFrame.BorderColor3 = Color3.new(0, 0, 0)
  MainFrame.BorderSizePixel = 0
  MainFrame.Transparency = 1
  MainFrame.Position = UDim2.new(0.187441245, 0, 0.476932675, 0)
  MainFrame.Size = UDim2.new(0, 45, 0, 45)
  UICorner.CornerRadius = UDim.new(0, 100)
  UICorner.Parent = MainFrame
  UICorner_2.CornerRadius = UDim.new(0, 100)
  UICorner_2.Parent = ImageLabel
  ImageLabel.Parent = MainFrame
  ImageLabel.AnchorPoint = Vector2.new(0.5, 0.5)
  ImageLabel.BackgroundColor3 = Color3.new(0, 0, 0)
  ImageLabel.BorderColor3 = Color3.new(0, 0, 0)
  ImageLabel.BorderSizePixel = 0
  ImageLabel.Position = UDim2.new(0.48888889, 0, 0.48888889, 0)
  ImageLabel.Size = UDim2.new(0, 45, 0, 45)
  ImageLabel.Image = "rbxassetid://16535029455"
  TextButton.Parent = MainFrame
  TextButton.BackgroundColor3 = Color3.new(1, 1, 1)
  TextButton.BackgroundTransparency = 1
  TextButton.BorderColor3 = Color3.new(0, 0, 0)
  TextButton.BorderSizePixel = 0
  TextButton.Position = UDim2.new(3.3908421e-07, 0, 0, 0)
  TextButton.Size = UDim2.new(0, 45, 0, 45)
  TextButton.AutoButtonColor = false
  TextButton.Font = Enum.Font.SourceSans
  TextButton.Text = "MTX"
  TextButton.TextColor3 = Color3.new(255, 255, 255)
  TextButton.TextSize = 15
  TextButton.MouseButton1Click:Connect(function()
    Fluent.Window:Minimize()
  end)
end  
